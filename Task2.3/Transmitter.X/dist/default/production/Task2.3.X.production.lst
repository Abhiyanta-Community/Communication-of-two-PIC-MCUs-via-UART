

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 22:24:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.31
    12                           ; Generated 13/10/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0006                     _PORTB	set	6
   163  0019                     _TXREG	set	25
   164  0064                     _TXIF	set	100
   165  00C6                     _RX9	set	198
   166  00C4                     _CREN	set	196
   167  00C7                     _SPEN	set	199
   168  0086                     _TRISB	set	134
   169  0099                     _SPBRG	set	153
   170  040F                     _nRBPU	set	1039
   171  04C6                     _TX9	set	1222
   172  04C5                     _TXEN	set	1221
   173  04C4                     _SYNC	set	1220
   174  04C2                     _BRGH	set	1218
   175  043F                     _TRISC7	set	1087
   176  043E                     _TRISC6	set	1086
   177                           
   178                           	psect	cinit
   179  07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182  07FC                     __initialization:
   183  07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  07FC                     __end_of__initialization:
   187  07FC  0183               	clrf	3
   188  07FD  120A  118A  2FCE   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191  0070                     __pcstackCOMMON:
   192  0070                     ?_Initialize_UART:
   193  0070                     ??_Initialize_UART:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_UART_send_char:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ??_UART_send_char:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     UART_send_char@bt:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210  0070                     	ds	1
   211  0071                     ??_main:
   212                           
   213                           	psect	maintext
   214  07CE                     __pmaintext:	
   215                           ; 1 bytes @ 0x1
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 29 in file "Transmitter.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   235 ;;      Params:         0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called:    1
   241 ;; This function calls:
   242 ;;		_Initialize_UART
   243 ;;		_UART_send_char
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           
   250                           ;psect for function _main
   251  07CE                     _main:
   252  07CE                     l661:	
   253                           ;incstack = 0
   254                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   255                           
   256                           
   257                           ;Transmitter.c: 31:   TRISB = 0xFF;
   258  07CE  30FF               	movlw	255
   259  07CF  1683               	bsf	3,5	;RP0=1, select bank1
   260  07D0  1303               	bcf	3,6	;RP1=0, select bank1
   261  07D1  0086               	movwf	6	;volatile
   262  07D2                     l663:
   263                           
   264                           ;Transmitter.c: 32:   nRBPU = 0;
   265  07D2  1381               	bcf	1,7	;volatile
   266  07D3                     l665:
   267                           
   268                           ;Transmitter.c: 33:   Initialize_UART();
   269  07D3  120A  118A  27E4  120A  118A  	fcall	_Initialize_UART
   270  07D8                     l667:
   271                           
   272                           ;Transmitter.c: 36:   {;Transmitter.c: 37:     UART_send_char(PORTB);
   273  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   274  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   275  07DA  0806               	movf	6,w	;volatile
   276  07DB  120A  118A  27C4  120A  118A  	fcall	_UART_send_char
   277  07E0  2FD8               	goto	l667
   278  07E1  120A  118A  2800   	ljmp	start
   279  07E4                     __end_of_main:
   280                           
   281                           	psect	text1
   282  07C4                     __ptext1:	
   283 ;; *************** function _UART_send_char *****************
   284 ;; Defined at:
   285 ;;		line 23 in file "Transmitter.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;  bt              1    wreg     unsigned char 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  bt              1    0[COMMON] unsigned char 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         1       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0
   302 ;;      Totals:         1       0       0       0       0
   303 ;;Total ram usage:        1 bytes
   304 ;; Hardware stack levels used:    1
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _UART_send_char
   314  07C4                     _UART_send_char:
   315                           
   316                           ;incstack = 0
   317                           ; Regs used in _UART_send_char: [wreg]
   318                           ;UART_send_char@bt stored from wreg
   319  07C4  00F0               	movwf	UART_send_char@bt
   320  07C5                     l657:
   321  07C5                     l36:	
   322                           ;Transmitter.c: 23: void UART_send_char(char bt);Transmitter.c: 24: {;Transmitter.c: 25:
      +                               while(!TXIF);
   323                           
   324  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   325  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   326  07C7  1E0C               	btfss	12,4	;volatile
   327  07C8  2FCA               	goto	u11
   328  07C9  2FCB               	goto	u10
   329  07CA                     u11:
   330  07CA  2FC5               	goto	l36
   331  07CB                     u10:
   332  07CB                     l659:
   333                           
   334                           ;Transmitter.c: 26:     TXREG = bt;
   335  07CB  0870               	movf	UART_send_char@bt,w
   336  07CC  0099               	movwf	25	;volatile
   337  07CD                     l39:
   338  07CD  0008               	return
   339  07CE                     __end_of_UART_send_char:
   340                           
   341                           	psect	text2
   342  07E4                     __ptext2:	
   343 ;; *************** function _Initialize_UART *****************
   344 ;; Defined at:
   345 ;;		line 5 in file "Transmitter.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           
   373                           ;psect for function _Initialize_UART
   374  07E4                     _Initialize_UART:
   375  07E4                     l639:	
   376                           ;incstack = 0
   377                           ; Regs used in _Initialize_UART: [wreg]
   378                           
   379                           
   380                           ;Transmitter.c: 7:     TRISC6 = 0;
   381  07E4  1683               	bsf	3,5	;RP0=1, select bank1
   382  07E5  1303               	bcf	3,6	;RP1=0, select bank1
   383  07E6  1307               	bcf	7,6	;volatile
   384                           
   385                           ;Transmitter.c: 8:     TRISC7 = 1;
   386  07E7  1787               	bsf	7,7	;volatile
   387  07E8                     l641:
   388                           
   389                           ;Transmitter.c: 10:     SPBRG = ((20000000/16)/9600) - 1;
   390  07E8  3081               	movlw	129
   391  07E9  0099               	movwf	25	;volatile
   392  07EA                     l643:
   393                           
   394                           ;Transmitter.c: 11:     BRGH = 1;
   395  07EA  1518               	bsf	24,2	;volatile
   396  07EB                     l645:
   397                           
   398                           ;Transmitter.c: 13:     SYNC = 0;
   399  07EB  1218               	bcf	24,4	;volatile
   400  07EC                     l647:
   401                           
   402                           ;Transmitter.c: 14:     SPEN = 1;
   403  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   404  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   405  07EE  1798               	bsf	24,7	;volatile
   406  07EF                     l649:
   407                           
   408                           ;Transmitter.c: 16:     TXEN = 1;
   409  07EF  1683               	bsf	3,5	;RP0=1, select bank1
   410  07F0  1303               	bcf	3,6	;RP1=0, select bank1
   411  07F1  1698               	bsf	24,5	;volatile
   412  07F2                     l651:
   413                           
   414                           ;Transmitter.c: 17:     CREN = 1;
   415  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   416  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   417  07F4  1618               	bsf	24,4	;volatile
   418  07F5                     l653:
   419                           
   420                           ;Transmitter.c: 19:     TX9 = 0;
   421  07F5  1683               	bsf	3,5	;RP0=1, select bank1
   422  07F6  1303               	bcf	3,6	;RP1=0, select bank1
   423  07F7  1318               	bcf	24,6	;volatile
   424  07F8                     l655:
   425                           
   426                           ;Transmitter.c: 20:     RX9 = 0;
   427  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   428  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   429  07FA  1318               	bcf	24,6	;volatile
   430  07FB                     l33:
   431  07FB  0008               	return
   432  07FC                     __end_of_Initialize_UART:
   433  007E                     btemp	set	126	;btemp
   434  007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       1
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                    _Initialize_UART
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (1) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 22:24:33 2021

                      l33 07FB                        l36 07C5                        l39 07CD  
                      u10 07CB                        u11 07CA                       l641 07E8  
                     l651 07F2                       l643 07EA                       l653 07F5  
                     l645 07EB                       l661 07CE                       l655 07F8  
                     l647 07EC                       l639 07E4                       l663 07D2  
                     l649 07EF                       l657 07C5                       l665 07D3  
                     l659 07CB                       l667 07D8                       _RX9 00C6  
                     _TX9 04C6                      _BRGH 04C2                      _CREN 00C4  
                    _SPEN 00C7                      _TXEN 04C5                      _TXIF 0064  
                    _SYNC 04C4                      _main 07CE                      btemp 007E  
                    start 0000                     ?_main 0070                     _SPBRG 0099  
                   _PORTB 0006                     _TRISB 0086                     _TXREG 0019  
                   _nRBPU 040F                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 07E4                    ??_main 0071  
                  _TRISC6 043E                    _TRISC7 043F   __end_of__initialization 07FC  
          __pcstackCOMMON 0070  __size_of_Initialize_UART 0018                __pmaintext 07CE  
 __size_of_UART_send_char 000A                   __ptext1 07C4                   __ptext2 07E4  
       ??_Initialize_UART 0070      end_of_initialization 07FC       start_initialization 07FC  
          _UART_send_char 07C4    __end_of_UART_send_char 07CE                 ___latbits 0002  
         _Initialize_UART 07E4          UART_send_char@bt 0070           ?_UART_send_char 0070  
 __end_of_Initialize_UART 07FC             __size_of_main 0016          ?_Initialize_UART 0070  
        ??_UART_send_char 0070  
