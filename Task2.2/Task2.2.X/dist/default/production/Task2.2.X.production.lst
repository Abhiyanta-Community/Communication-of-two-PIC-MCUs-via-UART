

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 27 17:51:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0006                     _PORTB	set	6
   166  001A                     _RCREG	set	26
   167  0019                     _TXREG	set	25
   168  0065                     _RCIF	set	101
   169  00C1                     _OERR	set	193
   170  0064                     _TXIF	set	100
   171  00C6                     _RX9	set	198
   172  00C4                     _CREN	set	196
   173  00C7                     _SPEN	set	199
   174  0086                     _TRISB	set	134
   175  0099                     _SPBRG	set	153
   176  04C6                     _TX9	set	1222
   177  04C5                     _TXEN	set	1221
   178  04C4                     _SYNC	set	1220
   179  04C2                     _BRGH	set	1218
   180  043F                     _TRISC7	set	1087
   181  043E                     _TRISC6	set	1086
   182                           
   183                           	psect	strings
   184  0003                     __pstrings:
   185  0003                     stringtab:
   186  0003                     __stringtab:
   187  0003                     stringcode:	
   188                           ;	String table - string pointers are 1 byte each
   189                           
   190  0003                     stringdir:
   191  0003  3000               	movlw	high stringdir
   192  0004  008A               	movwf	10
   193  0005  0804               	movf	4,w
   194  0006  0A84               	incf	4,f
   195  0007  0782               	addwf	2,f
   196  0008                     __stringbase:
   197  0008  3400               	retlw	0
   198  0009                     __end_of__stringtab:
   199  0009                     STR_3:
   200  0009  3420               	retlw	32	;' '
   201  000A  3420               	retlw	32	;' '
   202  000B  344F               	retlw	79	;'O'
   203  000C  3475               	retlw	117	;'u'
   204  000D  3474               	retlw	116	;'t'
   205  000E  3470               	retlw	112	;'p'
   206  000F  3475               	retlw	117	;'u'
   207  0010  3474               	retlw	116	;'t'
   208  0011  343A               	retlw	58	;':'
   209  0012  3432               	retlw	50	;'2'
   210  0013  3420               	retlw	32	;' '
   211  0014  3420               	retlw	32	;' '
   212  0015  3400               	retlw	0
   213  0016                     STR_4:
   214  0016  3420               	retlw	32	;' '
   215  0017  3420               	retlw	32	;' '
   216  0018  344F               	retlw	79	;'O'
   217  0019  3475               	retlw	117	;'u'
   218  001A  3474               	retlw	116	;'t'
   219  001B  3470               	retlw	112	;'p'
   220  001C  3475               	retlw	117	;'u'
   221  001D  3474               	retlw	116	;'t'
   222  001E  343A               	retlw	58	;':'
   223  001F  3433               	retlw	51	;'3'
   224  0020  3420               	retlw	32	;' '
   225  0021  3420               	retlw	32	;' '
   226  0022  3400               	retlw	0
   227  0023                     STR_2:
   228  0023  3420               	retlw	32	;' '
   229  0024  3420               	retlw	32	;' '
   230  0025  344F               	retlw	79	;'O'
   231  0026  3475               	retlw	117	;'u'
   232  0027  3474               	retlw	116	;'t'
   233  0028  3470               	retlw	112	;'p'
   234  0029  3475               	retlw	117	;'u'
   235  002A  3474               	retlw	116	;'t'
   236  002B  343A               	retlw	58	;':'
   237  002C  3431               	retlw	49	;'1'
   238  002D  3420               	retlw	32	;' '
   239  002E  3400               	retlw	0
   240  002F                     STR_1:
   241  002F  3449               	retlw	73	;'I'
   242  0030  346E               	retlw	110	;'n'
   243  0031  3470               	retlw	112	;'p'
   244  0032  3475               	retlw	117	;'u'
   245  0033  3474               	retlw	116	;'t'
   246  0034  343A               	retlw	58	;':'
   247  0035  3400               	retlw	0
   248                           
   249                           	psect	cinit
   250  07FC                     start_initialization:	
   251                           ; #config settings
   252                           
   253  07FC                     __initialization:
   254  07FC                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  07FC                     __end_of__initialization:
   258  07FC  0183               	clrf	3
   259  07FD  120A  118A  2FA9   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	cstackCOMMON
   262  0070                     __pcstackCOMMON:
   263  0070                     ?_UART_Initialize:
   264  0070                     ??_UART_Initialize:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_UART_send_char:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??_UART_send_char:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_UART_get_char:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_UART_get_char:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_UART_send_string:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     UART_send_char@bt:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290  0070                     	ds	1
   291  0071                     ??_UART_send_string:
   292                           
   293                           ; 1 bytes @ 0x1
   294  0071                     	ds	1
   295  0072                     UART_send_string@st_pt:
   296                           
   297                           ; 1 bytes @ 0x2
   298  0072                     	ds	1
   299  0073                     ??_main:
   300                           
   301                           ; 1 bytes @ 0x3
   302  0073                     	ds	2
   303  0075                     main@get_value:
   304                           
   305                           ; 2 bytes @ 0x5
   306  0075                     	ds	2
   307                           
   308                           	psect	maintext
   309  07A9                     __pmaintext:	
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 40 in file "Task2.2.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  get_value       2    5[COMMON] int 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         2       0       0       0       0
   331 ;;      Temps:          2       0       0       0       0
   332 ;;      Totals:         4       0       0       0       0
   333 ;;Total ram usage:        4 bytes
   334 ;; Hardware stack levels required when called:    2
   335 ;; This function calls:
   336 ;;		_UART_Initialize
   337 ;;		_UART_get_char
   338 ;;		_UART_send_string
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           
   345                           ;psect for function _main
   346  07A9                     _main:
   347  07A9                     l731:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   350                           
   351                           
   352                           ;Task2.2.c: 41:     int get_value;;Task2.2.c: 43:     TRISB = 0x00;
   353  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   354  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   355  07AB  0186               	clrf	6	;volatile
   356                           
   357                           ;Task2.2.c: 44:     PORTB = 0;
   358  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   359  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   360  07AE  0186               	clrf	6	;volatile
   361  07AF                     l733:
   362                           
   363                           ;Task2.2.c: 45:     UART_Initialize();
   364  07AF  120A  118A  2772  120A  118A  	fcall	_UART_Initialize
   365  07B4                     l735:
   366                           
   367                           ;Task2.2.c: 48:         UART_send_string("Input:");
   368  07B4  3027               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   369  07B5  120A  118A  278A  120A  118A  	fcall	_UART_send_string
   370  07BA                     l737:
   371                           
   372                           ;Task2.2.c: 49:         get_value = UART_get_char();
   373  07BA  120A  118A  2764  120A  118A  	fcall	_UART_get_char
   374  07BF  00F3               	movwf	??_main
   375  07C0  01F4               	clrf	??_main+1
   376  07C1  0873               	movf	??_main,w
   377  07C2  00F5               	movwf	main@get_value
   378  07C3  0874               	movf	??_main+1,w
   379  07C4  00F6               	movwf	main@get_value+1
   380  07C5                     l739:
   381                           
   382                           ;Task2.2.c: 51:         if (get_value == '1'){
   383  07C5  3031               	movlw	49
   384  07C6  0675               	xorwf	main@get_value,w
   385  07C7  0476               	iorwf	main@get_value+1,w
   386  07C8  1D03               	btfss	3,2
   387  07C9  2FCB               	goto	u91
   388  07CA  2FCC               	goto	u90
   389  07CB                     u91:
   390  07CB  2FD6               	goto	l745
   391  07CC                     u90:
   392  07CC                     l741:
   393                           
   394                           ;Task2.2.c: 52:             PORTB = 0b00000010;
   395  07CC  3002               	movlw	2
   396  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   397  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   398  07CF  0086               	movwf	6	;volatile
   399  07D0                     l743:
   400                           
   401                           ;Task2.2.c: 53:             UART_send_string("  Output:1 ");
   402  07D0  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   403  07D1  120A  118A  278A  120A  118A  	fcall	_UART_send_string
   404  07D6                     l745:
   405                           
   406                           ;Task2.2.c: 55:         if (get_value == '2'){
   407  07D6  3032               	movlw	50
   408  07D7  0675               	xorwf	main@get_value,w
   409  07D8  0476               	iorwf	main@get_value+1,w
   410  07D9  1D03               	btfss	3,2
   411  07DA  2FDC               	goto	u101
   412  07DB  2FDD               	goto	u100
   413  07DC                     u101:
   414  07DC  2FE7               	goto	l751
   415  07DD                     u100:
   416  07DD                     l747:
   417                           
   418                           ;Task2.2.c: 56:             PORTB = 0b00000100;
   419  07DD  3004               	movlw	4
   420  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   421  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   422  07E0  0086               	movwf	6	;volatile
   423  07E1                     l749:
   424                           
   425                           ;Task2.2.c: 57:             UART_send_string("  Output:2  ");
   426  07E1  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   427  07E2  120A  118A  278A  120A  118A  	fcall	_UART_send_string
   428  07E7                     l751:
   429                           
   430                           ;Task2.2.c: 59:         if (get_value == '3'){
   431  07E7  3033               	movlw	51
   432  07E8  0675               	xorwf	main@get_value,w
   433  07E9  0476               	iorwf	main@get_value+1,w
   434  07EA  1D03               	btfss	3,2
   435  07EB  2FED               	goto	u111
   436  07EC  2FEE               	goto	u110
   437  07ED                     u111:
   438  07ED  2FB4               	goto	l735
   439  07EE                     u110:
   440  07EE                     l753:
   441                           
   442                           ;Task2.2.c: 60:             PORTB = 0b00001000;
   443  07EE  3008               	movlw	8
   444  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   445  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   446  07F1  0086               	movwf	6	;volatile
   447  07F2                     l755:
   448                           
   449                           ;Task2.2.c: 61:             UART_send_string("  Output:3  ");
   450  07F2  300E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   451  07F3  120A  118A  278A  120A  118A  	fcall	_UART_send_string
   452  07F8  2FB4               	goto	l735
   453  07F9  120A  118A  2800   	ljmp	start
   454  07FC                     __end_of_main:
   455                           
   456                           	psect	text1
   457  078A                     __ptext1:	
   458 ;; *************** function _UART_send_string *****************
   459 ;; Defined at:
   460 ;;		line 35 in file "Task2.2.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  st_pt           1    wreg     PTR unsigned char 
   463 ;;		 -> STR_4(13), STR_3(13), STR_2(12), STR_1(7), 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  st_pt           1    2[COMMON] PTR unsigned char 
   466 ;;		 -> STR_4(13), STR_3(13), STR_2(12), STR_1(7), 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         1       0       0       0       0
   478 ;;      Temps:          1       0       0       0       0
   479 ;;      Totals:         2       0       0       0       0
   480 ;;Total ram usage:        2 bytes
   481 ;; Hardware stack levels used:    1
   482 ;; Hardware stack levels required when called:    1
   483 ;; This function calls:
   484 ;;		_UART_send_char
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _UART_send_string
   492  078A                     _UART_send_string:
   493                           
   494                           ;incstack = 0
   495                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   496                           ;UART_send_string@st_pt stored from wreg
   497  078A  00F2               	movwf	UART_send_string@st_pt
   498  078B                     l723:
   499                           
   500                           ;Task2.2.c: 36:     while(*st_pt)
   501  078B  2F9C               	goto	l729
   502  078C                     l725:
   503                           
   504                           ;Task2.2.c: 37:         UART_send_char(*st_pt++);
   505  078C  0872               	movf	UART_send_string@st_pt,w
   506  078D  0084               	movwf	4
   507  078E  120A  118A  2003  120A  118A  	fcall	stringdir
   508  0793  120A  118A  275A  120A  118A  	fcall	_UART_send_char
   509  0798                     l727:
   510  0798  3001               	movlw	1
   511  0799  00F1               	movwf	??_UART_send_string
   512  079A  0871               	movf	??_UART_send_string,w
   513  079B  07F2               	addwf	UART_send_string@st_pt,f
   514  079C                     l729:
   515                           
   516                           ;Task2.2.c: 36:     while(*st_pt)
   517  079C  0872               	movf	UART_send_string@st_pt,w
   518  079D  0084               	movwf	4
   519  079E  120A  118A  2003  120A  118A  	fcall	stringdir
   520  07A3  3A00               	xorlw	0
   521  07A4  1D03               	skipz
   522  07A5  2FA7               	goto	u81
   523  07A6  2FA8               	goto	u80
   524  07A7                     u81:
   525  07A7  2F8C               	goto	l725
   526  07A8                     u80:
   527  07A8                     l56:
   528  07A8  0008               	return
   529  07A9                     __end_of_UART_send_string:
   530                           
   531                           	psect	text2
   532  075A                     __ptext2:	
   533 ;; *************** function _UART_send_char *****************
   534 ;; Defined at:
   535 ;;		line 20 in file "Task2.2.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  bt              1    wreg     unsigned char 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  bt              1    0[COMMON] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0
   552 ;;      Totals:         1       0       0       0       0
   553 ;;Total ram usage:        1 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_UART_send_string
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _UART_send_char
   564  075A                     _UART_send_char:
   565                           
   566                           ;incstack = 0
   567                           ; Regs used in _UART_send_char: [wreg]
   568                           ;UART_send_char@bt stored from wreg
   569  075A  00F0               	movwf	UART_send_char@bt
   570  075B                     l659:
   571  075B                     l40:	
   572                           ;Task2.2.c: 21:     while(!TXIF);
   573                           
   574  075B  1283               	bcf	3,5	;RP0=0, select bank0
   575  075C  1303               	bcf	3,6	;RP1=0, select bank0
   576  075D  1E0C               	btfss	12,4	;volatile
   577  075E  2F60               	goto	u11
   578  075F  2F61               	goto	u10
   579  0760                     u11:
   580  0760  2F5B               	goto	l40
   581  0761                     u10:
   582  0761                     l661:
   583                           
   584                           ;Task2.2.c: 22:     TXREG = bt;
   585  0761  0870               	movf	UART_send_char@bt,w
   586  0762  0099               	movwf	25	;volatile
   587  0763                     l43:
   588  0763  0008               	return
   589  0764                     __end_of_UART_send_char:
   590                           
   591                           	psect	text3
   592  0764                     __ptext3:	
   593 ;; *************** function _UART_get_char *****************
   594 ;; Defined at:
   595 ;;		line 25 in file "Task2.2.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      unsigned char 
   602 ;; Registers used:
   603 ;;		wreg
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0
   612 ;;      Totals:         0       0       0       0       0
   613 ;;Total ram usage:        0 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _UART_get_char
   624  0764                     _UART_get_char:
   625  0764                     l681:	
   626                           ;incstack = 0
   627                           ; Regs used in _UART_get_char: [wreg]
   628                           
   629                           
   630                           ;Task2.2.c: 26:     if(OERR){
   631  0764  1283               	bcf	3,5	;RP0=0, select bank0
   632  0765  1303               	bcf	3,6	;RP1=0, select bank0
   633  0766  1C98               	btfss	24,1	;volatile
   634  0767  2F69               	goto	u21
   635  0768  2F6A               	goto	u20
   636  0769                     u21:
   637  0769  2F6C               	goto	l47
   638  076A                     u20:
   639  076A                     l683:
   640                           
   641                           ;Task2.2.c: 27:         CREN = 0;
   642  076A  1218               	bcf	24,4	;volatile
   643                           
   644                           ;Task2.2.c: 28:         CREN = 1;
   645  076B  1618               	bsf	24,4	;volatile
   646  076C                     l47:
   647  076C  1E8C               	btfss	12,5	;volatile
   648  076D  2F6F               	goto	u31
   649  076E  2F70               	goto	u30
   650  076F                     u31:
   651  076F  2F6C               	goto	l47
   652  0770                     u30:
   653  0770                     l685:
   654                           
   655                           ;Task2.2.c: 32:     return RCREG;
   656  0770  081A               	movf	26,w	;volatile
   657  0771                     l50:
   658  0771  0008               	return
   659  0772                     __end_of_UART_get_char:
   660                           
   661                           	psect	text4
   662  0772                     __ptext4:	
   663 ;; *************** function _UART_Initialize *****************
   664 ;; Defined at:
   665 ;;		line 5 in file "Task2.2.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _UART_Initialize
   694  0772                     _UART_Initialize:
   695  0772                     l663:	
   696                           ;incstack = 0
   697                           ; Regs used in _UART_Initialize: [wreg]
   698                           
   699                           
   700                           ;Task2.2.c: 6:     TRISC6 = 0;
   701  0772  1683               	bsf	3,5	;RP0=1, select bank1
   702  0773  1303               	bcf	3,6	;RP1=0, select bank1
   703  0774  1307               	bcf	7,6	;volatile
   704                           
   705                           ;Task2.2.c: 7:     TRISC7 = 1;
   706  0775  1787               	bsf	7,7	;volatile
   707  0776                     l665:
   708                           
   709                           ;Task2.2.c: 9:     SPBRG = ((20000000/16)/9600) - 1;
   710  0776  3081               	movlw	129
   711  0777  0099               	movwf	25	;volatile
   712  0778                     l667:
   713                           
   714                           ;Task2.2.c: 10:     BRGH = 1;
   715  0778  1518               	bsf	24,2	;volatile
   716  0779                     l669:
   717                           
   718                           ;Task2.2.c: 11:     SYNC = 0;
   719  0779  1218               	bcf	24,4	;volatile
   720  077A                     l671:
   721                           
   722                           ;Task2.2.c: 12:     SPEN = 1;
   723  077A  1283               	bcf	3,5	;RP0=0, select bank0
   724  077B  1303               	bcf	3,6	;RP1=0, select bank0
   725  077C  1798               	bsf	24,7	;volatile
   726  077D                     l673:
   727                           
   728                           ;Task2.2.c: 13:     TXEN = 1;
   729  077D  1683               	bsf	3,5	;RP0=1, select bank1
   730  077E  1303               	bcf	3,6	;RP1=0, select bank1
   731  077F  1698               	bsf	24,5	;volatile
   732  0780                     l675:
   733                           
   734                           ;Task2.2.c: 14:     CREN = 1;
   735  0780  1283               	bcf	3,5	;RP0=0, select bank0
   736  0781  1303               	bcf	3,6	;RP1=0, select bank0
   737  0782  1618               	bsf	24,4	;volatile
   738  0783                     l677:
   739                           
   740                           ;Task2.2.c: 15:     TX9 = 0;
   741  0783  1683               	bsf	3,5	;RP0=1, select bank1
   742  0784  1303               	bcf	3,6	;RP1=0, select bank1
   743  0785  1318               	bcf	24,6	;volatile
   744  0786                     l679:
   745                           
   746                           ;Task2.2.c: 16:     RX9 = 0;
   747  0786  1283               	bcf	3,5	;RP0=0, select bank0
   748  0787  1303               	bcf	3,6	;RP1=0, select bank0
   749  0788  1318               	bcf	24,6	;volatile
   750  0789                     l37:
   751  0789  0008               	return
   752  078A                     __end_of_UART_Initialize:
   753  007E                     btemp	set	126	;btemp
   754  007E                     wtemp0	set	126

Data Sizes:
    Strings     45
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[12]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     259
                                              3 COMMON     4     4      0
                    _UART_Initialize
                      _UART_get_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     192
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_get_char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialize
   _UART_get_char
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 27 17:51:54 2021

                        pc 0002                         l40 075B                         l50 0771  
                       l43 0763                         l37 0789                         l47 076C  
                       l56 07A8                         u10 0761                         u11 0760  
                       u20 076A                         u21 0769                         u30 0770  
                       u31 076F                         u80 07A8                         u81 07A7  
                       u90 07CC                         u91 07CB                         fsr 0004  
                      l723 078B                        l731 07A9                        l661 0761  
                      l725 078C                        l741 07CC                        l733 07AF  
                      l671 077A                        l663 0772                        l727 0798  
                      l751 07E7                        l743 07D0                        l735 07B4  
                      l673 077D                        l665 0776                        l681 0764  
                      l729 079C                        l753 07EE                        l745 07D6  
                      l737 07BA                        l675 0780                        l667 0778  
                      l683 076A                        l659 075B                        l755 07F2  
                      l747 07DD                        l739 07C5                        l677 0783  
                      l669 0779                        l685 0770                        l749 07E1  
                      l679 0786                        u100 07DD                        u101 07DC  
                      u110 07EE                        u111 07ED                        _RX9 00C6  
                      _TX9 04C6                        fsr0 0004                       STR_1 002F  
                     STR_2 0023                       STR_3 0009                       STR_4 0016  
                     _BRGH 04C2                       _CREN 00C4                       _RCIF 0065  
                     _OERR 00C1                       _SPEN 00C7                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4                       _main 07A9  
                     btemp 007E                       start 0000  __size_of_UART_send_string 001F  
         ?_UART_Initialize 0070                      ?_main 0070                      _RCREG 001A  
                    _SPBRG 0099                      _PORTB 0006                      _TRISB 0086  
                    _TXREG 0019                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 07FC               __end_of_main 07FC  
                   ??_main 0073              main@get_value 0075                     _TRISC6 043E  
                   _TRISC7 043F    __end_of__initialization 07FC             __pcstackCOMMON 0070  
         _UART_send_string 078A      __end_of_UART_get_char 0772                 __pmaintext 07A9  
  __size_of_UART_send_char 000A                 __stringtab 0003                    __ptext1 078A  
                  __ptext2 075A                    __ptext3 0764                    __ptext4 0772  
 __size_of_UART_Initialize 0018       end_of_initialization 07FC   __end_of_UART_send_string 07A9  
      start_initialization 07FC             _UART_send_char 075A          ??_UART_Initialize 0070  
   __end_of_UART_send_char 0764                  ___latbits 0002     __size_of_UART_get_char 000E  
         UART_send_char@bt 0070                  __pstrings 0003            ?_UART_send_char 0070  
              __stringbase 0008      UART_send_string@st_pt 0072              _UART_get_char 0764  
        ?_UART_send_string 0070         ??_UART_send_string 0071         __end_of__stringtab 0009  
           ?_UART_get_char 0070            _UART_Initialize 0772              __size_of_main 0053  
                stringcode 0003    __end_of_UART_Initialize 078A           ??_UART_send_char 0070  
          ??_UART_get_char 0070                   stringdir 0003                   stringtab 0003  
